#include <stdio.h>
#include <string.h>

#define MAX_PACIENTES 101
#define MAX_NOME 31

typedef struct {
    char nome[MAX_NOME];
    char sobrenome[MAX_NOME];
} pacientes;

void ler_nomes(int n, pacientes paciente[MAX_PACIENTES]) {
    char aux[MAX_NOME * 2];
    int i, j;

    for (i = 0; i < n; i++) {
        scanf("%s", aux);

        for (j = 0; aux[j] != '_'; j++) {
            paciente[i].nome[j] = aux[j];
        }
        paciente[i].nome[j] = '\0';

        j++;
        int k = 0;
        for (; aux[j] != '\0'; j++, k++) {
            paciente[i].sobrenome[k] = aux[j];
        }
        paciente[i].sobrenome[k] = '\0';
    }
}

void homonimos(int n, pacientes paciente[MAX_PACIENTES], char comparado[MAX_NOME], int indices[MAX_PACIENTES]) {
    int i;
    int indice = 0;

    for (i = 0; i < n; i++) {
        if (strcmp(paciente[i].nome, comparado) == 0) {
            indices[indice] = i;
            indice++;
        }
    }

    for (i = 0; i < indice; i++) {
        printf("%s_%s\n", paciente[indices[i]].nome, paciente[indices[i]].sobrenome);
    }
}

void parentes(int n, pacientes paciente[MAX_PACIENTES], char comparado[MAX_NOME], int indices[MAX_PACIENTES]) {
    int i;
    int indice = 0;

    for (i = 0; i < n; i++) {
        if (strcmp(paciente[i].sobrenome, comparado) == 0) {
            indices[indice] = i;
            indice++;
        }
    }

    for (i = 0; i < indice; i++) {
        printf("%s_%s\n", paciente[indices[i]].nome, paciente[indices[i]].sobrenome);
    }
}

int main() {
    int n;
    scanf("%d", &n);
    pacientes paciente[MAX_PACIENTES];
    ler_nomes(n, paciente);

    char comparacao[11], comparado[MAX_NOME];
    scanf("%s", comparacao);
    scanf("%s", comparado);

    int indices[MAX_PACIENTES] = {0};

    if (strcmp(comparacao, "homonimos") == 0) {
        homonimos(n, paciente, comparado, indices);
    } else if (strcmp(comparacao, "parentes") == 0) {
        parentes(n, paciente, comparado, indices);
    }

    return 0;
}
